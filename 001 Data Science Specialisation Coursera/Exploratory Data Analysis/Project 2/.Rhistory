data(iris)
iris[iris$Species=='virginica','Sepal.Length']
mean(iris[iris$Species=='virginica','Sepal.Length'])
set.seed(1)
rpois(5, 2)
?rpois
set.seed(10)
x <- rep(0:1, each = 5)
e <- rnorm(10, 0, 20)
y <- 0.5 + 2 * x + e
hist(y)
library(datasets)
Rprof()
fit <- lm(y ~ x1 + x2)
Rprof(NULL)
devtools::install_github("phillc73/abettor")
require('RCurl')
require('jsonlite')
?abettor
ls(abettor)
ls(packages:abettor)
loginBF(username="dgwparenti@gmail.com",
password="P4sSp0rT!",
applicationKey = "43XX5Vi3ZmHCytFd")
?loginBF
loginBF(username = dgwparenti@gmail.com", password = "P4sSp0rT!", applicationKey = "43XX5Vi3ZmHCytFd")
loginBF(username = dgwparenti", password = "P4sSp0rT!", applicationKey = "43XX5Vi3ZmHCytFd")
loginBF(username = "dgwparenti@gmail.com", password = "P4sSp0rT!", applicationKey = "43XX5Vi3ZmHCytFd")
headerPostLogin
source('C:/Users/daniele.parenti/Dropbox/R/6nations/BetfairAPI/loginBF.R')
loginBF(username = "dgwparenti@gmail.com", password = "P4sSp0rT!", applicationKey = "43XX5Vi3ZmHCytFd")
loginBF(username = "dgwparenti@gmail.com", password = "P4sSp0rT!", applicationKey = "43XX5Vi3ZmHCytFd")
devtools::install_github("phillc73/abettor")
require(RCurl)
require(jsonlite)
require(abettor)
loginBF(username="dgwparenti@gmail.com",
password="6nations",
applicationKey = "43XX5Vi3ZmHCytFd")
options(RCurlOptions = list(capath = system.file("CurlSSL", "cacert.pem", package = "RCurl"), ssl.verifypeer = FALSE))
loginBF(username="dgwparenti@gmail.com",
password="6nations",
applicationKey = "43XX5Vi3ZmHCytFd")
curl.opts <- curlOptions(
verbose=T,
header=T,
httpheader = c('Content-Type' = 'text/xml; charset=utf-8', Accept = "text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8"),
followLocation = TRUE,
useragent = "Mozilla/5.0 (Windows NT 6.1; rv:18.0) Gecko/20100101 Firefox/18.0")
options(RCurlOptions = list(capath = system.file("CurlSSL", "cacert.pem", package = "RCurl"), ssl.verifypeer = FALSE))
loginBF(username="dgwparenti@gmail.com",
password="6nations",
applicationKey = "43XX5Vi3ZmHCytFd")
require(abettor)
?loginBF
loginBF(username="dgwparenti@gmail.com",
password="6nations",
applicationKey = "43XX5Vi3ZmHCytFd",
sslVerify = F)
listEventTypes()
?listEventTypes
loginBF(username="dgwparenti@gmail.com",
password="6nations",
applicationKey = "43XX5Vi3ZmHCytFd",
sslVerify = sslVerifyOption)
sslVerifyOption <- F
# log in to betfair
loginBF(username="dgwparenti@gmail.com",
password="6nations",
applicationKey = "43XX5Vi3ZmHCytFd",
sslVerify = sslVerifyOption)
options(RCurlOptions = list(capath = system.file("CurlSSL", "cacert.pem", package = "RCurl"),
sslVerify = FALSE))
loginBF(username="dgwparenti@gmail.com",
password="6nations",
applicationKey = "43XX5Vi3ZmHCytFd")
loginBF(username="dgwparenti@gmail.com",
password="6nations",
applicationKey = "43XX5Vi3ZmHCytFd",
sslVerify = F)
options(RCurlOptions = list(capath = system.file("CurlSSL", "cacert.pem", package = "RCurl"), ssl.verifypeer = FALSE))
listEventTypes(sslVerify = sslVerifyOption)
listCountries(eventTypeIds = "7", sslVerify = sslVerifyOption)
listCountries(eventTypeIds = "5", sslVerify = sslVerifyOption)
listCountries(eventTypeIds = "7", sslVerify = sslVerifyOption)
listMarketTypes(eventTypeIds = "7")
listMarketTypes(eventTypeIds = "7", sslVerify = sslVerifyOption)
marketCat <- listMarketCatalogue(eventTypeIds = "7", marketCountries = "GB", marketTypeCodes = "WIN")
# Find Market and Selection IDs
marketCat <- listMarketCatalogue(eventTypeIds = "7",
marketCountries = "GB",
marketTypeCodes = "WIN",
sslVerify = sslVerifyOption)
marketCat$marketId
marketCat$runners[[1]]$selectionId
head(marketCat)
listMarketTypes(eventTypeIds = "5", sslVerify = sslVerifyOption)
marketCat <- listMarketCatalogue(eventTypeIds = "5",
marketCountries = "GB",
marketTypeCodes = "OUTRIGHT_WINNER",
sslVerify = sslVerifyOption)
str(marketCat)
View(marketCat)
marketCat <- listMarketCatalogue(eventTypeIds = "5",
marketCountries = "GB",
marketTypeCodes = "OUTRIGHT_WINNER",
sslVerify = sslVerifyOption)
rm(marketCat)
marketCat <- listMarketCatalogue(eventTypeIds = "5",
marketCountries = "GB",
marketTypeCodes = "OUTRIGHT_WINNER",
sslVerify = sslVerifyOption)
listEventTypes(sslVerify = sslVerifyOption)
listCountries(eventTypeIds = "2", sslVerify = sslVerifyOption)
listMarketTypes(eventTypeIds = "2", sslVerify = sslVerifyOption)
marketCat <- listMarketCatalogue(eventTypeIds = "2",
marketCountries = "RU",
marketTypeCodes = "SET_WINNER",
sslVerify = sslVerifyOption)
str(marketCat)
marketCat <- listMarketCatalogue(eventTypeIds = "7",
marketCountries = "GB",
marketTypeCodes = "WIN",
sslVerify = sslVerifyOption)
marketCat$runners[[1]]$selectionId
marketCat$marketStartTime
myRace<-marketCat[grep("^Wolverhampton",marketCat$events$venue),]
marketCat$event$venue
myRace<-marketCat[grep("^Warwick",marketCat$event$venue),]
myRace
myRace<-myRace[grep("^2015-09-22T14:40*",myRace$marketStartTime),]
myMarketID<-myRace$marketId
listCountries(eventTypeIds = "5", sslVerify = sslVerifyOption)
sport<- "5"
listCountries(eventTypeIds = sport, sslVerify = sslVerifyOption)
listMarketTypes(eventTypeIds = sport, sslVerify = sslVerifyOption)
marketCat <- listMarketCatalogue(eventTypeIds = sport,
marketCountries = "GB",
marketTypeCodes = "SPECIAL",
sslVerify = sslVerifyOption)
rm(myRace,curl.opts,headersPostLogin,myMarketID,loginBF)
?marketTypeCodes
marketCat <- listMarketCatalogue(eventTypeIds = sport,
marketCountries = "GB",
marketTypeCodes = "SPECIAL",
sslVerify = sslVerifyOption)
loginBF(username="dgwparenti@gmail.com",
password="6nations",
applicationKey = "43XX5Vi3ZmHCytFd",
sslVerify = sslVerifyOption)
# Find Relevant Market Type
listMarketTypes(eventTypeIds = sport, sslVerify = sslVerifyOption)
marketCat <- listMarketCatalogue(eventTypeIds = sport,
marketCountries = "GB",
marketTypeCodes = "OUTRIGHT_WINNER",
sslVerify = sslVerifyOption)
sslVerifyOption <- T
marketCat <- listMarketCatalogue(eventTypeIds = sport,
marketCountries = "GB",
marketTypeCodes = "OUTRIGHT_WINNER",
sslVerify = sslVerifyOption)
sslVerifyOption <- FALSE
marketCat <- listMarketCatalogue(eventTypeIds = sport,
marketCountries = "GB",
marketTypeCodes = "OUTRIGHT_WINNER",
sslVerify = sslVerifyOption)
sport<- "7"
listMarketTypes(eventTypeIds = sport, sslVerify = sslVerifyOption)
sport<- "2"
listMarketTypes(eventTypeIds = sport, sslVerify = sslVerifyOption)
listCountries(eventTypeIds = sport, sslVerify = sslVerifyOption)
marketTypeCodes = "SET_WINNER",
marketCat <- listMarketCatalogue(eventTypeIds = sport,
marketCountries = "CN",
marketTypeCodes = "SET_WINNER",
sslVerify = sslVerifyOption)
sport<- "5"
listEventTypes(sslVerify = sslVerifyOption)
listCountries(eventTypeIds = sport, sslVerify = sslVerifyOption)
listMarketTypes(eventTypeIds = sport, sslVerify = sslVerifyOption)
marketCat <- listMarketCatalogue(eventTypeIds = sport,
marketCountries = "GB",
marketTypeCodes = "SPECIAL",
sslVerify = sslVerifyOption)
marketCat <- listMarketCatalogue(eventTypeIds = sport,
marketCountries = "GB",
marketTypeCodes = "HANDICAP",
sslVerify = sslVerifyOption)
?listMarketCatalogue
library(dplyr)
NEI <- readRDS("summarySCC_PM25.rds")
setwd("C:/Users/daniele.parenti/Dropbox/R/R Specialisation/datasciencecoursera/Exploratory Data Analysis/Project 2")
NEI <- readRDS("summarySCC_PM25.rds")
SCC <- readRDS("Source_Classification_Code.rds")
data<-tbl_df(NEI)
data<-summarise(data,total=sum(Emissions))
data<-tbl_df(NEI)
summarise(data,total=sum(Emissions))
head(iris)
summarise(iris,avg=mean(Sepal.Length))
58+23
data<-group_by(data,year)
str(data)
data
summarise(data,Emissions)
summarise(data,sum(Emissions))
total_by<-summarise(data,sum(Emissions))
with(total_by,plot(year,sum(Emissions))
with(total_by,plot(year,sum(Emissions)))
with(total_by,plot(year,sum(Emissions)))
plot(total_by$year,total_by$`sum(Emissions)`)
plot(total_by$year,total_by$`sum(Emissions)`,type = 'bar')
plot(total_by$year,total_by$`sum(Emissions)`,type = 's')
plot(total_by$year,total_by$`sum(Emissions)`,type = 'b')
# plot trend in base and to a png file
png(filename = "total_by_year.png")
plot(total_by$year,total_by$`sum(Emissions)`,type = 'b')
dev.off()
png(filename = "total_by_year.png")
plot(total_by$year,total_by$`sum(Emissions)`,type = 'b',main = "Total tons of PM2.5 by year")
dev.off()
data<-filter(data,fips='24510')
data<-tbl_df(NEI)
data<-filter(data,fips='24510')
data<-filter(data,fips=='24510')
data<-group_by(data,year)
total_by<-summarise(data,sum(Emissions))
end in base and to a png file
png(filename = "total_by_year.png")
plot(total_by$year,total_by$`sum(Emissions)`,
type = 'b',
main = "Total tons of PM2.5 by year in Baltimore")
dev.off()
png(filename = "total_by_year_baltimore.png")
plot(total_by$year,total_by$`sum(Emissions)`,
type = 'b',
main = "Total tons of PM2.5 by year in Baltimore")
dev.off()
# plot trend in base and to a png file
png(filename = "total_by_year.png")
plot(total_by$year,total_by$`sum(Emissions)`,type = 'b',main = "Total tons of PM2.5 by year")
dev.off()
data<-tbl_df(NEI)
data<-as.factor(data$type)
class(data$type)
data<-tbl_df(NEI)
data<-mutate(data,type=as.factor(type))
class(data$data)
data$type<-as.factor(data$type)
class(data$data)
data<-tbl_df(NEI)
data<-filter(data,fips=='24510')
data<-group_by(data,year)
data<-group_by(data,type)
summarise(data,type,year)
data
data<-group_by(data,year,type)
data
summarise(data,sum(Emissions))
sums<-summarise(data,sum(Emissions))
sums<-data_frame(sums)
sums<-as.data.frame(sums)
class(sums)
str(sums)
sums$type<-as.factor(sums$type)
str(sums)
sums<-rename(sums,sum(Emissions)=total_ems)
sums<-rename(sums,'sum(Emissions)'='total_ems')
data<-tbl_df(NEI)
# subset data for Baltimore only
data<-filter(data,fips=='24510')
# group by year and type
data<-group_by(data,year,type)
# summarise by year and type
sums<-summarise(data,sum(Emissions))
sums<-rename(sums,'sum(Emissions)'='total_ems')
data<-filter(data,fips=='24510')
data<-tbl_df(NEI)
data<-filter(data,fips=='24510')
data<-group_by(data,year,type)
sums<-summarise(data,total_ems=sum(Emissions))
sums<-as.data.frame(sums)
sums$type<-as.factor(sums$type)
g<-ggplot(sums,aes(year,total_ems))
library(ggplot2)
g<-ggplot(sums,aes(year,total_ems))
g+geom_line(aes(col=type))
g+geom_line(aes(col=type))+title(main='Total PM2.5 emissions by type')
g+geom_line(aes(col=type))+ggtitle('Total PM2.5 emissions by type')
ggplot2 4 series by year (1 series per type)
png("emissions_by_type.png")
g<-ggplot(sums,aes(year,total_ems))
g+geom_line(aes(col=type))+ggtitle('Total PM2.5 emissions by type')
dev.off()
data<-tbl_df(NEI)
names(SCC)
head(SCC)
table(SCC$SCC.Level.One,SCC$SCC.Level.Three)
SCC$SCC.Level.One
names(SCC$SCC.Level.One)
levels(SCC$SCC.Level.One)
